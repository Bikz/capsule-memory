{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export type CommonOpts = {\n  baseUrl: string;\n  apiKey: string;\n  orgId: string;\n  projectId: string;\n  defaultSubjectId: string;\n  fetchImpl?: typeof fetch;\n};\n\nexport type CapsuleVisibility = \"private\" | \"shared\" | \"public\";\n\nexport type CapsuleAcl = {\n  visibility: CapsuleVisibility;\n};\n\nexport type CapsuleSource = {\n  app?: string;\n  connector?: string;\n  url?: string;\n  fileId?: string;\n  spanId?: string;\n};\n\nexport type CapsulePiiFlags = Record<string, boolean>;\n\nexport type StorageDestination = \"short_term\" | \"long_term\" | \"capsule_graph\";\n\nexport type CapsuleRetention = \"irreplaceable\" | \"permanent\" | \"replaceable\" | \"ephemeral\";\n\nexport type StorageConfig = {\n  store?: StorageDestination;\n  graphEnrich?: boolean | null;\n  dedupeThreshold?: number | null;\n};\n\nexport type CaptureStatus = \"pending\" | \"approved\" | \"rejected\" | \"ignored\";\n\nexport type CaptureMemoryOverride = {\n  pinned?: boolean;\n  tags?: string[];\n  retention?: CapsuleRetention | \"auto\";\n  type?: string;\n  ttlSeconds?: number;\n};\n\nexport type CaptureEventInput = {\n  id?: string;\n  role: \"user\" | \"assistant\" | \"system\";\n  content: string;\n  metadata?: Record<string, unknown>;\n  autoAccept?: boolean;\n  memory?: CaptureMemoryOverride | null;\n};\n\nexport type CaptureScoreResult = {\n  eventId?: string;\n  candidateId?: string;\n  status: CaptureStatus;\n  recommended: boolean;\n  score: number;\n  reasons: string[];\n  memoryId?: string | null;\n};\n\nexport type CaptureScoreResponse = {\n  threshold: number;\n  results: CaptureScoreResult[];\n};\n\nexport type CaptureCandidate = {\n  id: string;\n  eventId?: string | null;\n  role: string;\n  content: string;\n  metadata: Record<string, unknown>;\n  score: number;\n  threshold: number;\n  recommended: boolean;\n  category: string;\n  reasons: string[];\n  status: CaptureStatus;\n  autoAccepted: boolean;\n  autoDecisionReason?: string | null;\n  memoryId?: string | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CaptureApprovalResponse = {\n  candidate: CaptureCandidate;\n  memory: unknown;\n};\n\nexport type StoragePolicySummary = {\n  name: string;\n  description?: string;\n  defaults?: {\n    store?: StorageDestination;\n    ttlSeconds?: number | null;\n    graphEnrich?: boolean;\n    dedupeThreshold?: number;\n    importanceScore?: number;\n    notes?: string;\n  };\n};\n\nexport type CreateMemoryInput = {\n  content: string;\n  pinned?: boolean;\n  tags?: string[];\n  ttlSeconds?: number;\n  idempotencyKey?: string;\n  type?: string;\n  lang?: string;\n  importanceScore?: number;\n  recencyScore?: number;\n  source?: CapsuleSource | null;\n  acl?: CapsuleAcl | null;\n  piiFlags?: CapsulePiiFlags | null;\n  storage?: StorageConfig | null;\n  subjectId?: string;\n  retention?: CapsuleRetention | null;\n};\n\nexport type UpdateMemoryInput = {\n  id: string;\n  pinned?: boolean;\n  tags?: string[] | null;\n  ttlSeconds?: number | null;\n  type?: string | null;\n  lang?: string | null;\n  importanceScore?: number | null;\n  recencyScore?: number | null;\n  source?: CapsuleSource | null;\n  acl?: CapsuleAcl | null;\n  piiFlags?: CapsulePiiFlags | null;\n  storage?: StorageConfig | null;\n  subjectId?: string;\n  retention?: CapsuleRetention | null;\n};\n\nexport type SearchInput = {\n  query: string;\n  limit?: number;\n  recipe?: string;\n  prompt?: string;\n  subjectId?: string;\n  rewrite?: boolean;\n  rerank?: boolean;\n};\n\nexport type ListInput = {\n  limit?: number;\n  pinned?: boolean;\n  tag?: string;\n  type?: string;\n  visibility?: CapsuleVisibility;\n  store?: StorageDestination;\n  graphEnrich?: boolean;\n  subjectId?: string;\n  retention?: CapsuleRetention;\n};\n\nexport type DeleteInput = {\n  id: string;\n  reason?: string;\n  subjectId?: string;\n};\n\nfunction trimBase(url: string) {\n  return url.replace(/\\/+$/, \"\");\n}\n\nexport class CapsuleMemoryClient {\n  #base: string;\n  #apiKey: string;\n  #org: string;\n  #project: string;\n  #subject: string;\n  #fetch: typeof fetch;\n\n  constructor(opts: CommonOpts) {\n    this.#base = trimBase(opts.baseUrl);\n    this.#apiKey = opts.apiKey;\n    this.#org = opts.orgId;\n    this.#project = opts.projectId;\n    this.#subject = opts.defaultSubjectId;\n    this.#fetch = opts.fetchImpl ?? globalThis.fetch;\n    if (!this.#fetch) {\n      throw new Error(\"No fetch implementation found. Use Node >=18 or pass fetchImpl.\");\n    }\n  }\n\n  private headers(subjectId?: string): Record<string, string> {\n    return {\n      \"Content-Type\": \"application/json\",\n      \"X-Capsule-Key\": this.#apiKey,\n      \"X-Capsule-Org\": this.#org,\n      \"X-Capsule-Project\": this.#project,\n      \"X-Capsule-Subject\": subjectId ?? this.#subject\n    };\n  }\n\n  private async request<T>(\n    path: string,\n    init?: RequestInit & { subjectId?: string }\n  ): Promise<T> {\n    const url = `${this.#base}${path.startsWith(\"/\") ? path : `/${path}`}`;\n    const res = await this.#fetch(url, {\n      method: init?.method ?? \"GET\",\n      headers: { ...this.headers(init?.subjectId), ...(init?.headers as object) },\n      body: init?.body\n    });\n    const text = await res.text();\n    if (!res.ok) {\n      throw new Error(text || `HTTP ${res.status}`);\n    }\n    const payload = text ? JSON.parse(text) : {};\n    return (\"data\" in payload ? payload.data : payload) as T;\n  }\n\n  async storeMemory(input: CreateMemoryInput) {\n    return this.request(\"/v1/memories\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        content: input.content,\n        pinned: input.pinned,\n        tags: input.tags,\n        ttlSeconds: input.ttlSeconds,\n        idempotencyKey: input.idempotencyKey,\n        type: input.type,\n        lang: input.lang,\n        importanceScore: input.importanceScore,\n        recencyScore: input.recencyScore,\n        source: input.source,\n        acl: input.acl,\n        piiFlags: input.piiFlags,\n        storage: input.storage,\n        retention: input.retention\n      }),\n      subjectId: input.subjectId\n    });\n  }\n\n  async listMemories(input: ListInput = {}) {\n    const params = new URLSearchParams();\n    if (input.limit) params.set(\"limit\", String(input.limit));\n    if (typeof input.pinned === \"boolean\") params.set(\"pinned\", String(input.pinned));\n    if (input.tag) params.set(\"tag\", input.tag);\n    if (input.type) params.set(\"type\", input.type);\n    if (input.visibility) params.set(\"visibility\", input.visibility);\n    if (input.store) params.set(\"store\", input.store);\n    if (typeof input.graphEnrich === \"boolean\") params.set(\"graphEnrich\", String(input.graphEnrich));\n    if (input.retention) params.set(\"retention\", input.retention);\n    if (input.subjectId) params.set(\"subjectId\", input.subjectId);\n    const qs = params.toString() ? `?${params.toString()}` : \"\";\n    return this.request(`/v1/memories${qs}`, { method: \"GET\", subjectId: input.subjectId });\n  }\n\n  async search(input: SearchInput) {\n    const headers: Record<string, string> = {};\n    if (typeof input.rewrite === \"boolean\") {\n      headers[\"X-Capsule-Rewrite\"] = String(input.rewrite);\n    }\n    if (typeof input.rerank === \"boolean\") {\n      headers[\"X-Capsule-Rerank\"] = String(input.rerank);\n    }\n    return this.request(\"/v1/memories/search\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: input.query,\n        limit: input.limit,\n        recipe: input.recipe,\n        prompt: input.prompt\n      }),\n      subjectId: input.subjectId,\n      headers\n    });\n  }\n\n  async listSearchRecipes() {\n    return this.request(\"/v1/memories/recipes\", { method: \"GET\" });\n  }\n\n  async listStoragePolicies(): Promise<{ policies: StoragePolicySummary[] }> {\n    return this.request(\"/v1/memories/policies\", { method: \"GET\" });\n  }\n\n  async scoreCapture(input: {\n    events: CaptureEventInput[];\n    threshold?: number;\n    subjectId?: string;\n  }): Promise<CaptureScoreResponse> {\n    return this.request(\"/v1/memories/capture\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        events: input.events,\n        threshold: input.threshold\n      }),\n      subjectId: input.subjectId\n    });\n  }\n\n  async listCaptureCandidates(input: {\n    status?: CaptureStatus;\n    limit?: number;\n    subjectId?: string;\n  } = {}): Promise<{ items: CaptureCandidate[] }> {\n    const params = new URLSearchParams();\n    if (input.status) params.set(\"status\", input.status);\n    if (input.limit) params.set(\"limit\", String(input.limit));\n    const qs = params.toString() ? `?${params.toString()}` : \"\";\n    return this.request(`/v1/memories/capture${qs}`, {\n      method: \"GET\",\n      subjectId: input.subjectId\n    });\n  }\n\n  async approveCaptureCandidate(input: {\n    id: string;\n    memory?: CaptureMemoryOverride | null;\n    subjectId?: string;\n  }): Promise<CaptureApprovalResponse> {\n    return this.request(`/v1/memories/capture/${encodeURIComponent(input.id)}/approve`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        memory: input.memory ?? undefined\n      }),\n      subjectId: input.subjectId\n    });\n  }\n\n  async rejectCaptureCandidate(input: {\n    id: string;\n    reason?: string;\n    subjectId?: string;\n  }): Promise<CaptureCandidate> {\n    return this.request(`/v1/memories/capture/${encodeURIComponent(input.id)}/reject`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        reason: input.reason\n      }),\n      subjectId: input.subjectId\n    });\n  }\n\n  async updateMemory(input: UpdateMemoryInput) {\n    return this.request(`/v1/memories/${encodeURIComponent(input.id)}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        pinned: input.pinned,\n        tags: input.tags,\n        ttlSeconds: input.ttlSeconds,\n        type: input.type,\n        lang: input.lang,\n        importanceScore: input.importanceScore,\n        recencyScore: input.recencyScore,\n        source: input.source,\n        acl: input.acl,\n        piiFlags: input.piiFlags,\n        storage: input.storage,\n        retention: input.retention\n      }),\n      subjectId: input.subjectId\n    });\n  }\n\n  async deleteMemory(input: DeleteInput) {\n    return this.request(`/v1/memories/${encodeURIComponent(input.id)}`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ reason: input.reason }),\n      subjectId: input.subjectId\n    });\n  }\n}\n"],"mappings":"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","names":[]}